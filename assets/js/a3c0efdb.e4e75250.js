"use strict";(self.webpackChunkmoopay_documents=self.webpackChunkmoopay_documents||[]).push([[255],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),g=u(n),d=o,m=g["".concat(c,".").concat(d)]||g[d]||p[d]||a;return n?r.createElement(m,i(i({ref:t},l),{},{components:n})):r.createElement(m,i({ref:t},l))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=g;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var u=2;u<a;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},9375:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return l},default:function(){return g}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],s={sidebar_label:"Request Signing",sidebar_position:2},c="Request Signing",u={unversionedId:"api access/request-signing",id:"api access/request-signing",isDocsHomePage:!1,title:"Request Signing",description:"All requests to the MooPay server require you to sign the request.",source:"@site/docs/api access/request-signing.md",sourceDirName:"api access",slug:"/api access/request-signing",permalink:"/api access/request-signing",editUrl:"https://github.com/MooPay/docs/docs/api access/request-signing.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_label:"Request Signing",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Account Keys",permalink:"/api access/api-keys"},next:{title:"Create Order",permalink:"/api access/create-order"}},l=[{value:"Signing",id:"signing",children:[]}],p={toc:l};function g(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"request-signing"},"Request Signing"),(0,a.kt)("p",null,"All requests to the MooPay server require you to sign the request.\nOnly ",(0,a.kt)("strong",{parentName:"p"},"POST")," requests are handled."),(0,a.kt)("p",null,"API Keys are available under ",(0,a.kt)("inlineCode",{parentName:"p"},"Settings > Accounts > API Keys")," section of your dashboard"),(0,a.kt)("h2",{id:"signing"},"Signing"),(0,a.kt)("p",null,"For all api requests, the following headers should be sent with the request:"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"MOO-KEY"),": Your Account key"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"MOO-TS"),": Number of milliseconds since Unix epoch"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"MOO-SIGN"),": SHA256 HMAC of the following three strings, using your API secret"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Request timestamp (e.g. 1635713520060)"),(0,a.kt)("li",{parentName:"ol"},"Request path, including leading slash without any query parameters but not including the hostname (e.g. /v1/validate-payment)"),(0,a.kt)("li",{parentName:"ol"},"Request body (JSON-encoded)")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:"title='Example Node js signature calculation'",title:"'Example",Node:!0,js:!0,signature:!0,"calculation'":!0},"  const crypto = require('crypto');\n\n  const postBody = {};\n  postBody['transaction'] = '0x01c483d2deb658e7cd6beea753aad0e176ea508b517b01eab9b45bf8e03b3a15';\n\n  const postBodyJson = JSON.stringify(postBody);\n\n  // MOO-TS\n  const ts = new Date().getTime();\n  const requestPath = '/v1/validate-payment';\n\n  //creating hmac object \n  const hmac = crypto.createHmac('sha256', 'YOUR_API_SECRET_HERE');\n\n  const toSign = `${ts}${requestPath}${postBodyJson}`;\n  // MOO-SIGN\n  const signature = hmac.update(toSign).digest('hex');\n\n")))}g.isMDXComponent=!0}}]);